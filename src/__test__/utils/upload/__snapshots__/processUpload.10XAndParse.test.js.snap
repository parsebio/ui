// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`processUpload 10x, v2 Should not upload files if there are errors beginning the multipart upload in the api: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/features10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodes10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrix10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{"cellranger_version":"v2"}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload 10x, v2 Should not upload files if there are errors creating samples in the api: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`processUpload 10x, v2 Updates redux correctly when there are file upload errors: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/features10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodes10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrix10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{"cellranger_version":"v2"}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload 10x, v2 Uploads and updates redux correctly when there are no errors 1`] = `
[
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
]
`;

exports[`processUpload 10x, v2 Uploads and updates redux correctly when there are no errors: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/features10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodes10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrix10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{"cellranger_version":"v2"}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload 10x, v3 Should not upload files if there are errors beginning the multipart upload in the api: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/features10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodes10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrix10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{"cellranger_version":"v3"}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload 10x, v3 Should not upload files if there are errors creating samples in the api: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`processUpload 10x, v3 Updates redux correctly when there are file upload errors: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/features10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodes10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrix10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{"cellranger_version":"v3"}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload 10x, v3 Uploads and updates redux correctly when there are no errors 1`] = `
[
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
]
`;

exports[`processUpload 10x, v3 Uploads and updates redux correctly when there are no errors: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"10x","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/features10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodes10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrix10x",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{"cellranger_version":"v3"}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload parse, null Should not upload files if there are errors beginning the multipart upload in the api: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"parse","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/featuresParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodesParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrixParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload parse, null Should not upload files if there are errors creating samples in the api: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"parse","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
]
`;

exports[`processUpload parse, null Updates redux correctly when there are file upload errors: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"parse","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/featuresParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodesParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrixParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploadError"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;

exports[`processUpload parse, null Uploads and updates redux correctly when there are no errors 1`] = `
[
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
  {
    "data": Blob {},
    "headers": {
      "Content-Type": "application/octet-stream",
    },
    "method": "put",
    "onUploadProgress": [Function],
    "signal": AbortSignal {},
    "url": "theSignedUrl",
  },
]
`;

exports[`processUpload parse, null Uploads and updates redux correctly when there are no errors: fetch calls 1`] = `
[
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples",
    {
      "body": "[{"name":"WT13","sampleTechnology":"parse","options":{}}]",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/featuresParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/barcodesParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/samples/mockSampleId/sampleFiles/matrixParse",
    {
      "body": "{"sampleFileId":"mockSampleFileId","size":1024}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId/beginUpload",
    {
      "body": "{"size":1024,"metadata":{}}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/completeMultipartUpload",
    {
      "body": "{"parts":[{"ETag":"etag-blah","PartNumber":1}],"uploadId":"some_id","fileId":"mockSampleFileId","type":"sample"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "POST",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
  [
    "http://localhost:3000/v2/experiments/project-uuid/sampleFiles/mockSampleFileId",
    {
      "body": "{"uploadStatus":"uploaded"}",
      "headers": {
        "Content-Type": "application/json",
      },
      "method": "PATCH",
    },
  ],
]
`;
